plugins {
    id "com.jfrog.bintray" version "1.7"
    id "com.github.dcendents.android-maven" version "1.5"
}

apply plugin: 'com.android.library'

ext {
    bintrayName = 'PrivacyStreams-third_parties'
    artifact = 'privacystreams-third_parties'

    libraryName = 'PrivacyStreams-third_parties'
    libraryDescription = 'The third party services integrated with PrivacyStreams framework, including DropboxConfig, Google Awareness, Google Maps, etc..'
    libraryVersion = "0.1.4"

    bintrayRepo = 'privacystreams-android'
    bintrayOrganization = "privacystreams"
    publishedGroupId = 'com.github.privacystreams'

    siteUrl = 'https://github.com/ylimit/PrivacyStreams'
    gitUrl = 'https://github.com/ylimit/PrivacyStreams.git'
    githubRepository= 'ylimit/PrivacyStreams'

    developerId = 'ylimit'
    developerName = 'Yuanchun Li'
    developerEmail = 'pkulyc@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 14
        versionName "0.1.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    provided project(':privacystreams-core')
}

group = publishedGroupId

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    provided project(':privacystreams-core')
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

version = libraryVersion


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc, dependsOn: tasks.getByPath(':doc_gen:jar')) {
    source = android.sourceSets.main.java.srcDirs
    destinationDir = file("build/docs/").absoluteFile

    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
    classpath += configurations.provided

    options.docletpath = [file('../doc_gen/build/libs/doc_gen.jar')]
    options.doclet = "com.github.privacystreams.PSDoclet"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = bintrayOrganization
        desc = libraryDescription
        websiteUrl = siteUrl
        issueTrackerUrl = siteUrl+'/issues'
        vcsUrl = gitUrl
        licenses = allLicenses
        githubRepo = githubRepository //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        publish = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
